// -*-Mode: C++;-*-
//

#ifndef TEXT_IMAGE_BUFFER_QIF_INCLUDED
#define TEXT_IMAGE_BUFFER_QIF_INCLUDED

runtime_class TextImgBuf
{
  client_hdr "TextImgBuf.hpp";
  client_name gfx::TextImgBuf;

  scriptable;
  cloneable;
  smartptr;

  // Stereo mode
  enumdef mode {
    simple = gfx::TextImgBuf::TIB_SIMPLE;
    outline = gfx::TextImgBuf::TIB_OUTLINE;
    html = gfx::TextImgBuf::TIB_HTML;
  }
  property enum mode => redirect(getMode, setMode);

  property string text => redirect(getText, setText);
  property string font => redirect(getFont, setFont);
  property real outlsize => redirect(getOlSize, setOlSize);
  property string color => redirect(getColor, setColor);
  property string outlcolor => redirect(getOlColor, setOlColor);

  property integer width => redirect(getWidth, setWidth);
  property integer height => redirect(getHeight, setHeight);
  property integer depth => redirect(getDepth, setDepth);

  //////////
  
  void resize(integer nsize);

  void setAt(integer i, integer value);
  integer getAt(integer i);

  void setAt2D(integer x, integer y, integer value);
  integer getAt2D(integer x, integer y);

  // string toString();

  // boolean equals(object<TextImgBuf$>);
};

#endif


