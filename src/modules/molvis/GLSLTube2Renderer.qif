// -*-Mode: C++;-*-
//
// Tube2 renderer implementation using GLSL
//

#ifndef TUBE2_REND_GLSL_QIF_INCLUDED
#define TUBE2_REND_GLSL_QIF_INCLUDED

#include "Tube2Renderer.qif"

runtime_class GLSLTube2Renderer extends Tube2Renderer
{
  client_hdr "GLSLTube2Renderer.hpp";
  client_name molvis::GLSLTube2Renderer;

  scriptable;
  smartptr;
  cloneable;

  /// Scaling factor to the axialdetail
  property integer axdet_scl => redirect(getAxDetScl, setAxDetScl);
  default axdet_scl = 1;

  /// force to use GLSL
  property boolean force_glsl => redirect(isForceGLSL, setForceGLSL);
  default force_glsl = false;

};

#endif

