// -*-Mode: C++;-*-
//
// Interface definition for Tube2Renderer
//

#ifndef TUBE2_RENDERER_QIF
#define TUBE2_RENDERER_QIF

#include <modules/molstr/MainChainRenderer.qif>
#include "TubeSection.qif"

runtime_class Tube2Renderer extends MainChainRenderer
{
  client_hdr "Tube2Renderer.hpp";
  client_name molvis::Tube2Renderer;

  scriptable;
  smartptr;
  cloneable;

  property object<TubeSection$> section => redirect(getTubeSection, xxx) (readonly);

  /// Detail level to the axial direction
  property integer axialdetail => redirect(getAxialDetail, setAxialDetail);
  default axialdetail = 6;

  // /// spline smoothing value
  // property real smooth => redirect(getSmooth, setSmooth);
  // default smooth = 0.0;

  /// color smoothing flag
  property boolean smoothcolor => redirect(isSmoothColor, setSmoothColor);
  default smoothcolor = false;

  /// Tube cap type
  enumdef start_captype {
    sphere = molvis::SplineRendBase::CAP_SPHR;
    flat = molvis::SplineRendBase::CAP_FLAT;
    none = molvis::SplineRendBase::CAP_NONE;
  }
  property enum start_captype => redirect(getStartCapType, setStartCapType);
  default start_captype = "sphere";

  enumdef end_captype = start_captype;

  property enum end_captype => redirect(getEndCapType, setEndCapType);
  default end_captype = "sphere";

};

#endif // TUBE2_RENDERER_QIF

