// -*-Mode: C++;-*-
//
// Molecular surface object scripting interface
//

#ifndef MOL_SURF_OBJ_QIF_INCLUDED
#define MOL_SURF_OBJ_QIF_INCLUDED

#include <qsys/Object.qif>
#include <qlib/Vector.qif>
#include <modules/molstr/SelCommand.qif>

runtime_class MolSurfObj extends Object
{
  client_hdr "MolSurfObj.hpp";
  client_name surface::MolSurfObj;

  scriptable;
  smartptr;

  property string orig_mol => redirect(getOrigMolName, setOrigMolName);
  // default name = "";
  
  property object<MolSelection$> orig_sel => redirect(getOrigSel, setOrigSel);
  // default sel = molstr::SelectionPtr(new molstr::SelCommand());

  property real orig_den => redirect(getOrigDen, setOrigDen);
  property real orig_prad => redirect(getOrigProbeRad, setOrigProbeRad);
  
  //////////

  /// Cut surface by a plane
  void cutByPlane(real cdiv, object<Vector> norm, object<Vector> pos, boolean bSec);
  void cutByPlane2(real cdiv, object<Vector> norm, object<Vector> pos, boolean bBody, boolean bSec);

  void createSESFromMol(object<MolCoord$> pMol, object<MolSelection$> pSel, real density, real probe_radius);

  void regenerateSES1(real density) => regenerateSES;

  void createHoleTest1(object<MolCoord$> pMol, object<Vector> dirnorm, object<Vector> startpos);
};

#endif

