// -*-Mode: C++;-*-
//
//

#ifndef MAPSURF_RENDERER_QIF_INCLUDED
#define MAPSURF_RENDERER_QIF_INCLUDED

#include "MapRenderer.qif"
#include <modules/molstr/SelCommand.qif>

runtime_class MapSurfRenderer extends MapRenderer
{
  client_hdr "MapSurfRenderer.hpp";
  client_name xtal::MapSurfRenderer;

  scriptable;
  smartptr;
  cloneable;

  /// Automatically update the map center as view center (only in mouseUp event)
  property boolean autoupdate => m_bAutoUpdate;
  default autoupdate = true;

  /// Automatically update (including mouse drag event)
  property boolean dragupdate => m_bDragUpdate;
  default dragupdate = false;

  property boolean cullface => redirect(isCullFace, setCullFace);
  default cullface = false;

  /// Mesh drawing mode
  enumdef drawmode {
    fill = xtal::MapSurfRenderer::MSRDRAW_FILL;
    line = xtal::MapSurfRenderer::MSRDRAW_LINE;
    point = xtal::MapSurfRenderer::MSRDRAW_POINT;
  }
  property enum drawmode => redirect(getDrawMode, setDrawMode);
  default drawmode = "fill";

  /// Line/Dot size in wireframe/dot mode
  property real width => redirect(getLineWidth, setLineWidth);
  default width = 1.2;

  /// Binning factor
  property integer binning => redirect(getBinFac, setBinFac);
  default binning = 1;

  /// Max grid size (in grid unit; default=100x100x100 grid)
  property real max_grids => redirect(getMaxGrids, setMaxGrids);
  default max_grids = 100;

  /// Max extent (in angstrom unit)
  property real maxExtent => redirect(getMaxExtent, XXX) (readonly);

  /// Convert to MolSurfObj
  object<Object$> generateSurfObj();

  //////////

  property boolean use_openmp => redirect(isUseOpenMP, setUseOpenMP);
  default use_openmp = false;

  property integer omp_thr => redirect(getOmpThr, setOmpThr);
  default omp_thr = -1;

};

#endif

