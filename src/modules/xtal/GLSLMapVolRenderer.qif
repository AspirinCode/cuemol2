// -*-Mode: C++;-*-
//
//

#ifndef GLSL_MAPVOL_RENDERER_QIF_INCLUDED
#define GLSL_MAPVOL_RENDERER_QIF_INCLUDED

#include "MapRenderer.qif"

runtime_class GLSLMapVolRenderer extends MapRenderer
{
  client_hdr "GLSLMapVolRenderer.hpp";
  client_name xtal::GLSLMapVolRenderer;
  using Color;

  scriptable;
  smartptr;
  cloneable;

  property real maxExtent => redirect(getMaxExtent, XXX) (readonly);

  /// Automatically update the map center as view center (only in mouseUp event)
  property boolean autoupdate => m_bAutoUpdate;
  default autoupdate = true;

  /// Automatically update (including mouse drag event)
  property boolean dragupdate => m_bDragUpdate;
  default dragupdate = true;

  property object<AbstractColor$> color => redirect(getColor, setColor);
  default color = gfx::SolidColor::createRGB(0.0, 1.0, 0.0);

  /// transfer-function type
  enumdef xferfn_type {
    multigrad = xtal::GLSLMapVolRenderer::GLMV_MULTIGRAD;
    rainbow1 = xtal::GLSLMapVolRenderer::GLMV_AUTO1;
    auto2 = xtal::GLSLMapVolRenderer::GLMV_AUTO2;
  }
  property enum xferfn_type => redirect(getXferFnType, setXferFnType);
  default xferfn_type = "rainbow1";

};

#endif

